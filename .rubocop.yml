# Set the maximum line length
Layout/LineLength:
  Max: 80

# Enforce double quotes for strings
Style/StringLiterals:
  EnforcedStyle: double_quotes

# Enforce snake_case for method and variable names
Naming/MethodName:
  EnforcedStyle: snake_case
Naming/VariableName:
  EnforcedStyle: snake_case

# Require trailing commas in multi-line arrays and hashes
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

# Prefer single-line blocks for simple statements
Style/BlockDelimiters:
  EnforcedStyle: line_count_based

# Enforce the use of empty lines after class/module definitions
Layout/EmptyLinesAroundClassBody:
  Enabled: true
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

# Require explicit return statements in methods
Style/RedundantReturn:
  Enabled: false

# Enforce spacing around operators
Layout/SpaceAroundOperators:
  Enabled: true

# Disable magic comments unless they are necessary
Style/FrozenStringLiteralComment:
  Enabled: false

# Enforce the use of `&&` and `||` instead of `and` and `or`
Style/AndOr:
  EnforcedStyle: conditionals

# Enforce guard clauses instead of nested conditionals
Style/GuardClause:
  Enabled: true

# Use symbol-to-proc conversion where possible
Style/SymbolProc:
  Enabled: true

# Avoid using `for` loops in favor of `each`
Style/For:
  Enabled: false

# Use `%i` for arrays of symbols
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    "%i": "[]"
    "%w": "[]"

# Disable some rules that may be unnecessary for certain projects
Metrics/BlockLength:
  Enabled: false
Metrics/MethodLength:
  Max: 15
Metrics/ClassLength:
  Max: 100
Metrics/LineLength:
  Max: 100

# Enable safe navigation usage (e.g., `&.`) when appropriate
Style/SafeNavigation:
  Enabled: true